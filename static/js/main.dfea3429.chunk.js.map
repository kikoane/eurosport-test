{"version":3,"sources":["services/fetchPlayers.js","utils/constants.js","components/PlayerHeader/styles.js","components/PlayerHeader/index.js","components/PlayerAttribute/styles.js","components/PlayerAttribute/index.js","components/PlayerStats/styles.js","components/PlayerStats/index.js","lib/formatWeight.js","lib/formatHeight.js","lib/computeMatchStats.js","components/Player/styles.js","components/Player/index.js","containers/Players/styles.js","containers/Players/index.js","styles.js","App.js","serviceWorker.js","index.js"],"names":["fetchPlayers","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","t0","abrupt","data","stop","PlayerHeaderWrapper","styled","div","_templateObject","PlayerCountryPicture","img","_templateObject2","PlayerName","_templateObject3","PlayerRank","_templateObject4","PlayerHeader","_ref","player","playerCountryPicture","concat","country","picture","playerName","firstname","lastname","playerRank","rank","react_default","createElement","src","PlayerAttributeWrapper","styles_templateObject","Title","styles_templateObject2","Info","styles_templateObject3","PlayerAttribute","name","value","PlayerStatsWrapper","PlayerStats_styles_templateObject","PlayerStats","playerWeight","weight","playerHeight","height","_computeMatchStats","matches","Array","isArray","Error","wins","filter","match","length","losses","computeMatchStats","last","components_PlayerAttribute","age","points","PlayerCardWrapper","Player_styles_templateObject","ColumnWrapper","Player_styles_templateObject2","TwoColumnInsideWrapper","Player_styles_templateObject3","PlayerImg","styles_templateObject4","Player","components_PlayerHeader","components_PlayerStats","PlayersWrapper","Players_styles_templateObject","Players","players","map","components_Player","key","shortname","PlayerWrapper","src_styles_templateObject","App","state","this","setState","containers_Players","Component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfea3429.chunk.js","sourcesContent":["import axios from 'axios';\n\nimport { PLAYERS_JSON } from '../utils/constants';\n\nexport default async () => {\n\tlet response = {};\n\ttry {\n\t\tresponse = await axios.get(PLAYERS_JSON);\n\t} catch (error) {\n\t\tthrow error;\n\t}\n\treturn response.data;\n}","export const PLAYERS_JSON = `https://eurosportdigital.github.io/eurosport-web-developer-recruitment/headtohead.json`;\n","import styled from 'styled-components';\n\nexport const PlayerHeaderWrapper = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\theight: 50px;\n\tline-height: 50px;\n\tbackground: #01123c;\n\ttext-align: center;\n`;\n\nexport const PlayerCountryPicture = styled.img`\n\tdisplay: block;\n\twidth: 70px;\n\theight: 50px;\n`;\n\nexport const PlayerName = styled.div`\n\tcolor: #fff;\n\tfont-weight: bold;\n\tmargin-left: 20px;\n`;\n\nexport const PlayerRank = styled.div`\n\tcolor: #fff;\n\tfont-weight: bold;\n\tmargin-left: 20px;\n`;","import React from 'react';\nimport { object } from 'prop-types';\n\nimport {\n  PlayerHeaderWrapper,\n  PlayerCountryPicture,\n  PlayerName,\n  PlayerRank,\n} from './styles';\n\nconst propTypes = {\n\tplayer: object,\n};\n\nconst PlayerHeader = ({player}) => {\n\tconst playerCountryPicture = `${player.country.picture}`;\n\tconst playerName = `${player.firstname} ${player.lastname}`;\n\tconst playerRank = `${player.data.rank}`;\n\n\treturn (\n\t\t<PlayerHeaderWrapper>\n\t\t\t<PlayerCountryPicture src={playerCountryPicture}></PlayerCountryPicture>\n\t\t\t<PlayerName>{playerName}</PlayerName>\n\t\t\t<PlayerRank># {playerRank}</PlayerRank>\n\t\t</PlayerHeaderWrapper>\n\t)\n};\n\nPlayerHeader.propTypes = propTypes;\n\nexport default PlayerHeader;","import styled from 'styled-components';\n\nexport const PlayerAttributeWrapper = styled.div`\n\tdisplay:flex;\n\tflex-flow: row wrap;\n    justify-content: space-between;\n\twidth:100%;\n`;\n\nexport const Title = styled.div`\n \tflex: 0 1 50%;\n\tfont-weight: bold;\n\ttext-align: center;\n\tcolor: #030c36;\n\tborder-bottom : 1px solid #01123c;\n\n\t&:last-child {\n\t\tborder-bottom: 0px;\n\t}\n`;\n\nexport const Info = styled.div`\n\tflex: 0 1 50%;\n\ttext-align: center;\n\tbackground: #66d998 !important;\n\tfont-weight: bold;\n\tcolor: #030c36;\n\tborder-left : 1px solid #01123c;\n\tborder-bottom : 1px solid #01123c;\n\tmargin-left: -2px;\n`;","import React from 'react';\nimport {\n\tstring, \n\tnumber, \n} from 'prop-types';\n\nimport {\n  PlayerAttributeWrapper,\n  Info,\n  Title,\n} from './styles';\n\nconst propTypes = {\n  name: string,\n  value: number,\n}\n\nconst PlayerAttribute = ({name, value}) => {\n\treturn (\n\t\t\t\t<PlayerAttributeWrapper>\n\t\t\t\t\t<Title>{ name }</Title>\t\t\n\t\t\t\t\t<Info>{ value }</Info>\n\t\t\t\t</PlayerAttributeWrapper>\n\t)\n};\n\nPlayerAttribute.propTypes = propTypes;\n\nexport default PlayerAttribute;","import styled from 'styled-components';\n\nexport const PlayerStatsWrapper = styled.div`\n\tdisplay:flex;\n\tflex-flow: row wrap;\n\tposition: relative;\n\tbackground: #eee !important;\n\twidth: 100%;\n\theight: 150px;\n`;","import React from 'react';\nimport { object } from 'prop-types';\n\nimport PlayerAttribute from '../PlayerAttribute';\nimport formatHeight from '../../lib/formatHeight';\nimport formatWeight from '../../lib/formatWeight';\nimport computeMatchStats from '../../lib/computeMatchStats';\nimport {\n  PlayerStatsWrapper,\n} from './styles';\n\nconst propTypes = {\n\tplayer: object,\n};\n\nconst PlayerStats = ({player}) => {\n\tconst playerWeight = formatWeight(player.weight);\n\tconst playerHeight = formatHeight(player.height);\n\tconst { wins, losses } = computeMatchStats(player.last);\n\n\treturn (\n\t\t\t<PlayerStatsWrapper>\n\t\t\t\t<PlayerAttribute name=\"Age\" value={player.age}/>\n\t\t\t\t<PlayerAttribute name=\"Points\" value={player.points}/>\n\t\t\t\t<PlayerAttribute name=\"Weight (kg)\" value={playerWeight}/>\n\t\t\t\t<PlayerAttribute name=\"Height (m)\" value={playerHeight}/>\n\t\t\t\t<PlayerAttribute name=\"Wins\" value={wins}/>\n\t\t\t\t<PlayerAttribute name=\"Losses\" value={losses}/>\n\t\t\t</PlayerStatsWrapper>\n\t)\n};\n\nPlayerStats.propTypes = propTypes;\n\nexport default PlayerStats;","export default weightInGrams => weightInGrams / 1000;\n","export default heightInCM => heightInCM / 100;\n","export default matches => {\n  if (!matches || !Array.isArray(matches)) {\n    throw new Error('Array expected');\n  }\n\n  const WON = 1;\n  const wins = matches.filter(match => match === WON).length;\n  const losses = matches.length - wins;\n  \n  return { wins, losses };\n};","import styled from 'styled-components';\n\nexport const PlayerCardWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 45%;\n\tmargin: 20px;\n\tposition: relative;\n\tborder-right : 1px solid #01123c;\n\n\t@media (max-width: 576px) {\n\t    width: 100%;\n\t}\n`;\n\nexport const ColumnWrapper = styled.div`\n\twidth: 100%;\n`;\n\nexport const TwoColumnInsideWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: wrap;\n\theight: 150px;\n`;\n\nexport const PlayerImg = styled.img`\n\tborder-right : 1px solid #01123c;\n`;","import React from 'react';\nimport { object } from 'prop-types';\n\nimport PlayerHeader from '../PlayerHeader';\nimport PlayerStats from '../PlayerStats';\nimport {\n  PlayerCardWrapper,\n  ColumnWrapper,\n  TwoColumnInsideWrapper,\n  PlayerImg,\n} from './styles';\n\nconst propTypes = {\n\tplayer: object,\n};\n\nconst Player = ({player}) => {\n\treturn (\n\t\t<PlayerCardWrapper>\n\t\t\t<PlayerHeader player={player}/>\n\t\t\t<ColumnWrapper>\n\t\t\t\t<TwoColumnInsideWrapper>\n\t\t\t\t\t<PlayerImg src={player.picture}/>\n\t\t\t\t\t<PlayerStats player={player.data}/>\n\t\t\t\t</TwoColumnInsideWrapper>\n\t\t\t</ColumnWrapper>\t\t\n\t\t</PlayerCardWrapper>\n\t);\n}\n\nPlayer.propTypes = propTypes;\n\nexport default Player;","import styled from 'styled-components';\n\nexport const PlayersWrapper = styled.div`\n\tdisplay:flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n\tpadding : 20px;\n`;\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport Player from '../../components/Player';\nimport {\n  PlayersWrapper\n} from './styles';\n\nconst propTypes = {\n\tplayers: array,\n};\n\nconst Players = ({players}) => {\n\treturn (\n\t\t<PlayersWrapper>\n\t\t\t{\n\t\t\t\tplayers.map((player) => (\n\t\t\t\t\t<Player player={player} key={player.shortname} />\n\t\t\t\t))\n\t\t\t}\n\t\t</PlayersWrapper>\n\t);\n}\n\nPlayers.propTypes = propTypes;\n\nexport default Players;","import styled from 'styled-components';\n\nexport const PlayerWrapper = styled.div``;\n","import React, { Component } from 'react';\n\nimport fetchPlayers from './services/fetchPlayers';\nimport Players from './containers/Players';\nimport {\n  PlayerWrapper\n} from './styles';\n\nclass App extends Component {\n  state = {\n    players: []\n  };\n\n  async componentDidMount() {\n    const { players } = await fetchPlayers();\n    this.setState({ players: players })\n  }\n\n  render() {\n    return (\n     <PlayerWrapper>\n        <Players players={this.state.players} />\n     </PlayerWrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}